---
name: CI to Docker Hub
on:
  push:
    branches:
      - master
  workflow_dispatch:
  # schedule:
  #   - cron: '0 14 * * 0'
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: List images
        run: |
          grep -e '\[[^ ]\+\].*hub.docker.com' README.md \
            | sed -e 's/^.*\[\([^ ]\+\)\].*$/\1/' > images.txt
          echo -ne '>> images: '
          cat images.txt | wc -l
          cat images.txt
          echo -e '>> spec:'
          set -x
          grep -ce '^processor\s\+:' /proc/cpuinfo | tee cpus.txt
          free -g
          df -Th
      - name: Build and push images
        run: |
          touch s.txt f.txt
          {
            for n in $(cat images.txt); do
              echo -ne "docker-compose build ${n} && docker-compose push ${n}"
              echo -ne " && echo '${n}' >> s.txt"
              echo -ne " && docker image ls -q ${{ github.actor }}/${n} | xargs docker image rm -f"
              echo -e " || echo '${n}' >> f.txt"
            done
          } | xargs -P $(cat cpus.txt) -t -I{} bash -c '{}'
          cat s.txt | xargs -I{} sed -ie '/^{}$/d' f.txt
      - name: Print the intermediate results
        run: |
          echo -ne '>> succeeded: '
          cat s.txt | wc -l
          cat s.txt
          echo -ne '>> failed: '
          cat f.txt | wc -l
          cat f.txt
      - name: Clean up images
        run: |
          docker image ls -q | xargs -P $(cat cpus.txt) -L 1 -t docker image rm -f || :
      - name: Retry build and push
        run: |
          if [[ $(cat f.txt | wc -l) -gt 0 ]]; then
            {
              for n in $(cat f.txt); do
                echo -ne "docker-compose build ${n} && docker-compose push ${n}"
                echo -ne " && echo '${n}' >> s.txt"
                echo -ne " && sed -ie '/^${n}$/d' f.txt"
                echo -ne " && docker image ls -q ${{ github.actor }}/${n} | xargs docker image rm -f"
                echo -e ' || :'
              done
            } | xargs -P $(cat cpus.txt) -t -I{} bash -c '{}'
          fi
      - name: Print the final results
        run: |
          echo -ne '>> succeeded: '
          cat s.txt | wc -l
          cat s.txt
          echo -ne '>> failed: '
          cat f.txt | wc -l
          cat f.txt
          exit $(cat f.txt | wc -l)
